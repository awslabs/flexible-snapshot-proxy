# The Purpose of this github Action is to automate and create records of checks that should exist for any pull request.
# This is completed by running checks and if successful, creating an appropriate pull request + notification in slack feed

name: CI
on:
  push:
  pull_request:

jobs:
  lint: # LINTER JOB - Identifies recommendations for how to keep the code clean
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Super-Linter
        uses: github/super-linter/slim@v4.9.4 # Notes on how to configure here: https://github.com/github/super-linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          DISABLE_ERRORS: true # Linter will not cause a failure, just report how to clean the files
          VALIDATE_ALL_CODEBASE: false # Linter will only check the diff

  prepare_docker:
    run: |
      mkdir ~/.aws
      touch ~/.aws/config
      touch ~/.aws/credentials
      echo {{ secrets.AWS_TEST_ACCOUNT_CONFIG }} > ~/.aws/config
      echo {{ secrets.AWS_TEST_ACCOUNT_CREDENTIALS }} > ~/.aws/credentials
      cat ~/.aws/config
      cat ~/.aws/credentials
  
  test: # TESTING JOB - Runs tests to ensure backwards compatibility
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:latest
      options: --user root --privileged -v ~/.aws:/root/.aws

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Install Git 2.18, Python3, sudo and losetup
        run: |
          yum install -y git
          yum install -y python3
          yum install -y sudo
          yum install -y util-linux

      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell TODO entry point in testing script and exit codes to convey failure
      - name: Configure environment to run tests
        run: |
          pwd
          ls -la 
          pip3 --version
          echo Attempting to setup FSP dependencies!
          pip3 install -r requirements.txt
          echo dependencies setup!
          aws --version
          aws help
          aws configure << {{ secrets.AWS_TEST_ACCOUNT_CONFIGURATION_FILE }}
